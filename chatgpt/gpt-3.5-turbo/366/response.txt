# Response Time: 25.04921245574951
```
// Code before refactoring
public void paint(Graphics g, Shape shape) {
    int start = getStartOffset();
    int end = getEndOffset();
    Rectangle r;
    try {
        r = shape.getBounds();
        for (int i = start; i < end; i++) {
            Shape s = modelToView(i, Position.Bias.Forward, shape);
            if (s.intersects(r)) {
                drawUnselectedText((Graphics2D) g, i, s);
            }
        }
    } catch (BadLocationException e) {
        e.printStackTrace();
    }
}

// Code after refactoring
public void paint(Graphics g, Shape shape) {
    int start = getStartOffset();
    int end = getEndOffset();
    Rectangle r;
    try {
        r = shape.getBounds();
        Graphics2D g2d = (Graphics2D) g;
        for (int i = start; i < end; i++) {
            Shape s = modelToView(i, Position.Bias.Forward, shape);
            if (s.intersects(r)) {
                drawUnselectedText(g2d, (float) s.getBounds2D().getX(), (float) s.getBounds2D().getY(), i, i + 1);
            }
        }
    } catch (BadLocationException e) {
        e.printStackTrace();
    }
}
```