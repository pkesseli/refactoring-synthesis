# Response Time: 17.14210033416748
Sure, here's an example:

<<< Before refactoring:
```
ByteArrayOutputStream baos = new ByteArrayOutputStream();
baos.write("Hello, world!".getBytes());
String result = baos.toString(StandardCharsets.UTF_8);
System.out.println(result);
```

>>> After refactoring:
```
ByteArrayOutputStream baos = new ByteArrayOutputStream();
baos.write("Hello, world!".getBytes());
String result = baos.toString(StandardCharsets.UTF_8);
System.out.println(result);
```

Explanation: The deprecation warning only applies to the `toString(int)` method of `ByteArrayOutputStream`. The code snippet provided already uses the recommended method of `toString(Charset)` by passing `StandardCharsets.UTF_8` as the argument. Therefore, there is no need for refactoring in this case.