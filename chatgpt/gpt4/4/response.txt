# Response Time: 30.643916606903076
Before refactoring: 

```java
import com.sun.management.OperatingSystemMXBean;
import java.lang.management.ManagementFactory;

public class MemoryInfo {
    public static void main(String[] args) {
        OperatingSystemMXBean osBean = (OperatingSystemMXBean) ManagementFactory.getOperatingSystemMXBean();
        long physicalMemorySize = osBean.getTotalPhysicalMemorySize();
        System.out.println("Total physical memory size: " + physicalMemorySize / (1024 * 1024) + " MB");
    }
}
```

After refactoring:

```java
import java.lang.management.ManagementFactory;
import java.lang.management.OperatingSystemMXBean;

public class MemoryInfo {
    public static void main(String[] args) {
        OperatingSystemMXBean osBean = ManagementFactory.getOperatingSystemMXBean();
        long totalMemorySize = osBean.getTotalMemorySize();
        System.out.println("Total memory size: " + totalMemorySize / (1024 * 1024) + " MB");
    }
}
```

In the refactored code, we have replaced the deprecated `getTotalPhysicalMemorySize()` method with `getTotalMemorySize()`. The code now correctly prints the total memory size instead of physical memory size. We have also updated the import statement for `OperatingSystemMXBean` to use the standard `java.lang.management` package instead of the deprecated `com.sun.management` package.