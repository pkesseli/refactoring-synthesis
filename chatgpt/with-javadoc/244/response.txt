# Response Time: 47.91899228096008


Sure! Here's an example of how to refactor a code that uses `java.util.Date.getDay()` to use `java.util.Calendar.get(Calendar.DAY_OF_WEEK)` instead:

Before:

```
import java.util.Date;

public class Example {
  public static void main(String[] args) {
    Date date = new Date();
    int dayOfWeek = date.getDay();
    System.out.println("Today is day " + dayOfWeek);
  }
}
```

After:

```
import java.util.Calendar;

public class Example {
  public static void main(String[] args) {
    Calendar calendar = Calendar.getInstance();
    int dayOfWeek = calendar.get(Calendar.DAY_OF_WEEK);
    System.out.println("Today is day " + dayOfWeek);
  }
}
```

As you can see, the code now uses `Calendar.getInstance()` to get an instance of `Calendar` and then calls `calendar.get(Calendar.DAY_OF_WEEK)` to get the day of the week. This is the recommended way to get the day of the week in Java now that `java.util.Date.getDay()` is deprecated.