# Response Time: 14.260239839553833


Sure, here's an example of how you can refactor the deprecated `setCursor(int cursorType)` method to use `setCursor(Cursor cursor)` instead:

Before refactoring:

```
import java.awt.Frame;

public class Main {
  public static void main(String[] args) {
    Frame frame = new Frame("My Frame");
    frame.setCursor(Frame.HAND_CURSOR);
  }
}
```

After refactoring:

```
import java.awt.Cursor;
import java.awt.Frame;

public class Main {
  public static void main(String[] args) {
    Frame frame = new Frame("My Frame");
    Cursor cursor = Cursor.getPredefinedCursor(Cursor.HAND_CURSOR);
    frame.setCursor(cursor);
  }
}
```

In the refactored code, we first import the `Cursor` class from the `java.awt` package. Then, instead of using the deprecated `setCursor(int cursorType)` method, we create a `Cursor` object using the `getPredefinedCursor(int cursorType)` method, passing in the cursor type constant as an argument. Finally, we set the cursor on the `Frame` object using the `setCursor(Cursor cursor)` method. This way, we avoid using the deprecated method and use the recommended replacement method instead.