# Response Time: 13.64812421798706
Sure, here's an example refactoring to replace the deprecated `javax.net.ssl.HandshakeCompletedEvent.getPeerCertificateChain()` method:

Before:

```
import javax.net.ssl.HandshakeCompletedEvent;
import java.security.cert.Certificate;
import java.security.cert.X509Certificate;

public class ExampleClass {

    public void exampleMethod(HandshakeCompletedEvent event) {
        Certificate[] peerCertificates = event.getPeerCertificateChain();
        X509Certificate peerCertificate = (X509Certificate) peerCertificates[0];
        // do something with the peer certificate
    }
}
```

After:

```
import javax.net.ssl.HandshakeCompletedEvent;
import java.security.cert.Certificate;
import java.security.cert.X509Certificate;

public class ExampleClass {

    public void exampleMethod(HandshakeCompletedEvent event) {
        X509Certificate[] peerCertificates = event.getPeerCertificates();
        X509Certificate peerCertificate = peerCertificates[0];
        // do something with the peer certificate
    }
}
```

In the refactored code, we've replaced the deprecated `event.getPeerCertificateChain()` method with `event.getPeerCertificates()`, which returns an array of `X509Certificate` objects. We can then access the first certificate in the array to get the peer certificate. Note that we no longer need to cast the certificate to `X509Certificate`, as the method now returns an array of `X509Certificate` objects directly.