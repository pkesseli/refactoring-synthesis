# Response Time: 17.020351886749268
Sure! Here's an example refactoring using the recommended replacement method for `getPeerCertificateChain()`, which is `getPeerCertificates()`:

Before refactoring:
```
import javax.net.ssl.SSLSession;
import java.security.cert.CertificateEncodingException;
import java.security.cert.X509Certificate;

public class SSLClient {
    
    public void printPeerCertificateChain(SSLSession sslSession) {
        try {
            X509Certificate[] certs = sslSession.getPeerCertificateChain();
            for (X509Certificate cert : certs) {
                System.out.println(cert.getSubjectDN());
            }
        } catch (CertificateEncodingException e) {
            e.printStackTrace();
        }
    }
}
```

After refactoring:
```
import javax.net.ssl.SSLSession;
import java.security.cert.CertificateEncodingException;
import java.security.cert.Certificate;
import java.security.cert.X509Certificate;

public class SSLClient {
    
    public void printPeerCertificateChain(SSLSession sslSession) {
        try {
            Certificate[] certs = sslSession.getPeerCertificates();
            for (Certificate cert : certs) {
                if (cert instanceof X509Certificate) {
                    X509Certificate x509Cert = (X509Certificate) cert;
                    System.out.println(x509Cert.getSubjectDN());
                }
            }
        } catch (CertificateEncodingException e) {
            e.printStackTrace();
        }
    }
}
```

In the refactored code, we replaced `getPeerCertificateChain()` with `getPeerCertificates()`. We also updated the code to handle the fact that `getPeerCertificates()` returns an array of `Certificate` objects, which may not all be `X509Certificate` objects. To handle this, we added an `if` statement to filter out any non-`X509Certificate` objects before printing out their subject DN.