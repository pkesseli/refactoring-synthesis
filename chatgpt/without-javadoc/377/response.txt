# Response Time: 29.391384601593018
Sure, here's an example of refactoring the deprecated `javax.swing.text.WrappedPlainView.drawLine(int, int, Graphics, int, int)` method using the recommended alternative:

```java
// deprecated code
public class MyView extends WrappedPlainView {
    // ...

    @Override
    public void paint(Graphics g, Shape a) {
        Rectangle r = a.getBounds();
        int y = r.y + this.getInsets().top;
        for (int pos = this.getStartOffset(); pos < this.getEndOffset(); pos = this.getNextVisualPositionFrom(pos, Position.Bias.Forward, a, Position.Bias.Backward, null)) {
            Shape para = this.getParagraphElement(pos).getRangeRefinedByParagraph();
            if (r.intersects(para.getBounds())) {
                this.paintRow(g, para);
            }
            y += this.getRowHeight();
        }
    }

    @SuppressWarnings("deprecation")
    protected void paintRow(Graphics g, Shape row) {
        Rectangle r = (row instanceof Rectangle) ? (Rectangle) row : row.getBounds();
        int x = r.x;
        int y = r.y + this.getBaseline(row);
        int p0 = this.viewToModel(new Point(x, y));
        int p1 = this.viewToModel(new Point(x + r.width, y));
        this.drawLine(g, x, y, p0, p1);
    }
}
```

In this example, the `paintRow` method is using the deprecated `drawLine` method to draw lines. To refactor this code, we can replace the deprecated method with `drawLine` from the `Graphics2D` class:

```java
// refactored code
public class MyView extends WrappedPlainView {
    // ...

    @Override
    public void paint(Graphics g, Shape a) {
        Rectangle r = a.getBounds();
        int y = r.y + this.getInsets().top;
        for (int pos = this.getStartOffset(); pos < this.getEndOffset(); pos = this.getNextVisualPositionFrom(pos, Position.Bias.Forward, a, Position.Bias.Backward, null)) {
            Shape para = this.getParagraphElement(pos).getRangeRefinedByParagraph();
            if (r.intersects(para.getBounds())) {
                this.paintRow(g, para);
            }
            y += this.getRowHeight();
        }
    }

    protected void paintRow(Graphics g, Shape row) {
        Rectangle r = (row instanceof Rectangle) ? (Rectangle) row : row.getBounds();
        int x = r.x;
        int y = r.y + this.getBaseline(row);
        int p0 = this.viewToModel(new Point(x, y));
        int p1 = this.viewToModel(new Point(x + r.width, y));
        Graphics2D g2d = (Graphics2D) g;
        g2d.drawLine(x, y, x + r.width, y);
    }
}
```

In the refactored code, we've created a `Graphics2D` object from the original `Graphics` object passed into the method, and used the `drawLine` method from `Graphics2D` instead of the deprecated method. This avoids using a deprecated method and ensures the code will work with future versions of Java.